{
  // Place your sys42 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "sys42: create new useBase hook": {
    "scope": "typescriptreact,typescript",
    "prefix": "sys42:useBaseHook",
    "body": [
      "import React, { HTMLAttributes, useRef } from 'react';",
      "import { mergeRefs } from 'react-merge-refs';",
      "",
      "// Define specific props for the component",
      "interface ${1:${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/${1:/pascalcase}/}}Props {}",
      "",
      "export type Base${1}Props<ElemProps> = Sys42Props<${1}Props, ElemProps>;",
      "",
      "export type UseBase${1}Options<Props, Elem extends HTMLElement> = {",
      "  props: Props;",
      "  elementType: keyof JSX.IntrinsicElements;",
      "  forwardedRef: React.ForwardedRef<Elem>;",
      "};",
      "",
      "export function useBase${1}<",
      "  Props extends Base${1}Props<HTMLAttributes<HTMLElement>>,",
      "  Elem extends HTMLElement",
      ">({ props, elementType, forwardedRef }: UseBase${1}Options<Props, Elem>) {",
      "  const ref = useRef<Elem>(null);",
      "",
      "  return {",
      "    elementProps: {",
      "      ...props,",
      "    },",
      "    elementRef: mergeRefs([forwardedRef, ref]),",
      "  };",
      "}",
    ],
    "description": "Create new useBaseâ€¦ hook",
  },
}
